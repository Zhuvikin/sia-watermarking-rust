use std::io::Cursor;

use image::io::Reader as ImageReader;
use image::{DynamicImage, GenericImageView, ImageFormat};
use js_sys::{Array, Uint8Array};
use wasm_bindgen::prelude::*;

use watermarking;

use crate::image_model::ImageModel;
use crate::logging::log;
use crate::watermarking_process::WatermarkingProcess;

mod image_model;
mod logging;
mod watermarking_process;

#[wasm_bindgen]
pub fn get_watermarking_process(
    blob_js_array: Uint8Array,
    embedding_depth: f64,
    features_quantization_step: f64,
) -> WatermarkingProcess {
    console_log!("open_image_from_array_buffer {:?}", blob_js_array);

    // Read source image
    let blob: Vec<u8> = blob_js_array.to_vec();
    let (source, format) = get_source(blob);
    let image_format = format!("{:?}", format);

    let watermarked = get_watermarked(&source, embedding_depth, features_quantization_step);

    return WatermarkingProcess {
        source_format: image_format,
        source: get_image_model(&source),
        watermarked: get_image_model(&watermarked),
    };
}

fn get_image_model(image: &DynamicImage) -> ImageModel {
    let (width, height) = image.dimensions().clone();

    let data_js_value = JsValue::from(
        image
            .clone()
            .into_rgba8()
            .into_raw()
            .into_iter()
            .map(|x| JsValue::from(x))
            .collect::<Array>(),
    );

    return ImageModel {
        width,
        height,
        data: Uint8Array::new(&data_js_value),
    };
}

fn get_source(blob: Vec<u8>) -> (DynamicImage, ImageFormat) {
    let input_encoded_data = Cursor::new(blob);
    let reader = ImageReader::new(input_encoded_data)
        .with_guessed_format()
        .unwrap();
    let format = reader.format().unwrap();
    (reader.decode().unwrap(), format)
}

fn get_watermarked(
    original: &DynamicImage,
    embedding_depth: f64,
    features_quantization_step: f64,
) -> DynamicImage {
    watermarking::watermark(
        original.clone(),
        embedding_depth,
        features_quantization_step,
        11,
    )
}

#[test]
fn watermark_test_bmp() {
    let gif_image_base64 = "Qk1KAQAAAAAAAIoAAAB8AAAACAAAAAgAAAABABgAAAAAAMAAAAAjLgAAIy4AAAAAAAAAAAAAAAD/AAD/AAD/AAAAAAAAAEJHUnMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAMCQwMDlQgFjgATCYMZAJcAC0cBBQAAYQAA9xoM9QAa/7kLtf8ABv8UHOoVAFkTxBoP+QAA6ncF8f908/97b+YIAv8AHcgC2RwH9AAD/4LK+/r///fwgfzQAP8AHdAPcAgA/w6a/wD6/9P51//2C///C/SYEIECAQUGaA2wwAD9nS39HaH/BML3J3anAAEADAEAFgBoARnnBAD9CQD9BwD0AABaAyIBAwAYGAIAJAhsHRO6ASPQESVsBhwAAAAZ";
    let image_array = base64::decode(gif_image_base64).unwrap();

    let (actual_source, actual_format) = get_source(image_array);
    let (actual_width, actual_height) = actual_source.dimensions();

    assert_eq!(8, actual_width);
    assert_eq!(8, actual_height);
    assert_eq!(ImageFormat::Bmp, actual_format);
}

#[test]
fn watermark_test_jpeg() {
    let jpeg_image_base64 = "/9j/4AAQSkZJRgABAQABLAEsAAD/4QDYRXhpZgAATU0AKgAAAAgACAEOAAIAAAASAAAAbgESAAMAAAABAAEAAAEaAAUAAAABAAAAgAEbAAUAAAABAAAAiAEoAAMAAAABAAIAAAExAAIAAAANAAAAkAEyAAIAAAAUAAAAnodpAAQAAAABAAAAsgAAAABDcmVhdGVkIHdpdGggR0lNUAAAAAEsAAAAAQAAASwAAAABR0lNUCAyLjEwLjMyAAAyMDIyOjA3OjE2IDEyOjI2OjEzAAACoAIABAAAAAEAAAAIoAMABAAAAAEAAAAIAAAAAP/hDTlodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDYuMC4wIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiIEdJTVA6QVBJPSIyLjAiIEdJTVA6VmVyc2lvbj0iMi4xMC4zMiIgR0lNUDpUaW1lU3RhbXA9IjE2NTc5NjM1NzM5MzM1NTIiIEdJTVA6UGxhdGZvcm09Ik1hYyBPUyIgZGM6Rm9ybWF0PSJpbWFnZS9qcGVnIiB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMC4zMiIgeG1wOk1vZGlmeURhdGU9IjIwMjItMDctMTZUMTI6MjY6MTMiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjI6MDc6MTZUMTI6MjY6MTMrMDM6MDAiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpiM2JmYzRkMS00ZDUxLTRkMTUtOWI4Mi04OWRkNzk0MTliNjQiIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDo4YzEzM2RmZi0xZjZlLTQxYzMtYjQwMS1mNDllMmIyOTc3OWUiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MmViYTk4MTYtMGQ0ZS00YWUwLThiNGEtNjNjN2ZkN2ViOWE3Ij4gPGRjOmRlc2NyaXB0aW9uPiA8cmRmOkFsdD4gPHJkZjpsaSB4bWw6bGFuZz0ieC1kZWZhdWx0Ij5DcmVhdGVkIHdpdGggR0lNUDwvcmRmOmxpPiA8L3JkZjpBbHQ+IDwvZGM6ZGVzY3JpcHRpb24+IDx4bXBNTTpIaXN0b3J5PiA8cmRmOlNlcT4gPHJkZjpsaSBzdEV2dDpjaGFuZ2VkPSIvIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKE1hYyBPUykiIHN0RXZ0OndoZW49IjIwMjItMDctMTZUMTI6MjY6MTMrMDM6MDAiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6MTQ5MjdkM2EtYTRiYy00MzM2LTg1NDEtYzJmYTY5NTJjMDU4IiBzdEV2dDphY3Rpb249InNhdmVkIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg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";
    let image_array = base64::decode(jpeg_image_base64).unwrap();

    let (actual_source, actual_format) = get_source(image_array);
    let (actual_width, actual_height) = actual_source.dimensions();

    assert_eq!(8, actual_width);
    assert_eq!(8, actual_height);
    assert_eq!(ImageFormat::Jpeg, actual_format);
}

#[test]
fn watermark_test_png() {
    let png_image_base64 = "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gEdFQog0ycfAgAAAIJJREFUOMulU0EOwCAIK2T/f/LYwWAAgZGtJzS1BbVEuEVAAACCQOsKlkOrEicwgeVz5tC5R1yrDdnKuo6j6J5ydgd+npOUHfaGEJkQq+6cQNVqP1oQiCJxvAjGT3Dn3l1sKpAdfhPhqXP5xDYLXz7SkYUuUNnrcBWULkRlFqZxtvwH8zGCEN6LErUAAAAASUVORK5CYII=";
    let image_array = base64::decode(png_image_base64).unwrap();

    let (actual_source, actual_format) = get_source(image_array);
    let (actual_width, actual_height) = actual_source.dimensions();

    assert_eq!(16, actual_width);
    assert_eq!(16, actual_height);
    assert_eq!(ImageFormat::Png, actual_format);
}

#[test]
fn watermark_test_gif() {
    let gif_image_base64 = "";
    let image_array = base64::decode(gif_image_base64).unwrap();

    let (actual_source, actual_format) = get_source(image_array);
    let (actual_width, actual_height) = actual_source.dimensions();

    assert_eq!(128, actual_width);
    assert_eq!(128, actual_height);
    assert_eq!(ImageFormat::Gif, actual_format);
}

#[test]
fn watermark_test_tiff() {
    let tiff_image_base64 = "TU0AKgAAATIAA6ABAAMAAAABAAEAAKACAAQAAAABAAAACKADAAQAAAABAAAACAAAAAAYAAD/AAEY/20CJP/JDSL/ySIO/20lAv8AGAH/GAAA/wAAGP9aAAD/9BAA//8AAP//AAD/9AAR/1kAAP8AGAD/AAAA/60Rdf//AL7/9iSp//WsJf//vwD/rXQT/wAAAf8ABn3/mA76//8A///51///+//V////AP+Z/BH/AH4N/wUbz/8AAP//y3vz////+////P//zPh7/wD/AP8K0B3/DBjG/wAA//8Ab/X/dv/7/3b8/v8A+W7/AP8A/w7HGv8AA1v/Cxjq/xMA//8Av///AP+//xP/AP8Q7hr/A10J/wAAAP8BBzz/BACZ/xoAgf8bggD/CJoA/wU9Cv8BAAH/ABgBAAADAAAAAQAIAAABAQADAAAAAQAIAAABAgADAAAABAAAAmgBAwADAAAAAQABAAABBgADAAAAAQACAAABCgADAAAAAQABAAABDgACAAAAEgAAAngBEQAEAAAAAQAAADIBEgADAAAAAQABAAABFQADAAAAAQAEAAABFgADAAAAAQAIAAABFwAEAAAAAQAAAQABGgAFAAAAAQAAAlgBGwAFAAAAAQAAAmABHAADAAAAAQABAAABKAADAAAAAQACAAABMQACAAAADQAAAooBMgACAAAAFAAAApgBUgADAAAAAQABAAABUwADAAAABAAAAnACvAABAAAHgQAAAtKDuwAHAAAAJQAAAqyHaQAEAAAAAQAAAAiHcwAHAAACoAAAClQAAAAAAAABLAAAAAEAAAEsAAAAAQAIAAgACAAIAAEAAQABAAFDcmVhdGVkIHdpdGggR0lNUABHSU1QIDIuMTAuMzIAADIwMjI6MDc6MTYgMTI6MjY6MTMAHAFaAAMbJUccAgAAAgACHAJ4ABFDcmVhdGVkIHdpdGggR0lNUAA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA2LjAuMCI+CiAgIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICAgICAgICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgICAgICAgICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgICAgICAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgICAgICAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIj4KICAgICAgICAgPEdJTVA6QVBJPjIuMDwvR0lNUDpBUEk+CiAgICAgICAgIDxHSU1QOlZlcnNpb24+Mi4xMC4zMjwvR0lNUDpWZXJzaW9uPgogICAgICAgICA8R0lNUDpUaW1lU3RhbXA+MTY1Nzk2MzU3MzkzMzU1MjwvR0lNUDpUaW1lU3RhbXA+CiAgICAgICAgIDxHSU1QOlBsYXRmb3JtPk1hYyBPUzwvR0lNUDpQbGF0Zm9ybT4KICAgICAgICAgPGRjOkZvcm1hdD5pbWFnZS9qcGVnPC9kYzpGb3JtYXQ+CiAgICAgICAgIDxkYzpkZXNjcmlwdGlvbj4KICAgICAgICAgICAgPHJkZjpBbHQ+CiAgICAgICAgICAgICAgIDxyZGY6bGkgeG1sOmxhbmc9IngtZGVmYXVsdCI+Q3JlYXRlZCB3aXRoIEdJTVA8L3JkZjpsaT4KICAgICAgICAgICAgPC9yZGY6QWx0PgogICAgICAgICA8L2RjOmRlc2NyaXB0aW9uPgogICAgICAgICA8eG1wOkNyZWF0b3JUb29sPkdJTVAgMi4xMC4zMjwveG1wOkNyZWF0b3JUb29sPgogICAgICAgICA8eG1wOk1vZGlmeURhdGU+MjAyMi0wNy0xNlQxMjoyNjoxMzwveG1wOk1vZGlmeURhdGU+CiAgICAgICAgIDx4bXA6TWV0YWRhdGFEYXRlPjIwMjI6MDc6MTZUMTI6MjY6MTMrMDM6MDA8L3htcDpNZXRhZGF0YURhdGU+CiAgICAgICAgIDx4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ+eG1wLmRpZDpiM2JmYzRkMS00ZDUxLTRkMTUtOWI4Mi04OWRkNzk0MTliNjQ8L3htcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD4KICAgICAgICAgPHhtcE1NOkhpc3Rvcnk+CiAgICAgICAgICAgIDxyZGY6U2VxPgogICAgICAgICAgICAgICA8cmRmOmxpIHJkZjpwYXJzZVR5cGU9IlJlc291cmNlIj4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OmNoYW5nZWQ+Lzwvc3RFdnQ6Y2hhbmdlZD4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OnNvZnR3YXJlQWdlbnQ+R2ltcCAyLjEwIChNYWMgT1MpPC9zdEV2dDpzb2Z0d2FyZUFnZW50PgogICAgICAgICAgICAgICAgICA8c3RFdnQ6d2hlbj4yMDIyLTA3LTE2VDEyOjI2OjEzKzAzOjAwPC9zdEV2dDp3aGVuPgogICAgICAgICAgICAgICAgICA8c3RFdnQ6aW5zdGFuY2VJRD54bXAuaWlkOjE0OTI3ZDNhLWE0YmMtNDMzNi04NTQxLWMyZmE2OTUyYzA1ODwvc3RFdnQ6aW5zdGFuY2VJRD4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OmFjdGlvbj5zYXZlZDwvc3RFdnQ6YWN0aW9uPgogICAgICAgICAgICAgICA8L3JkZjpsaT4KICAgICAgICAgICAgPC9yZGY6U2VxPgogICAgICAgICA8L3htcE1NOkhpc3Rvcnk+CiAgICAgICAgIDx4bXBNTTpEb2N1bWVudElEPmdpbXA6ZG9jaWQ6Z2ltcDo4YzEzM2RmZi0xZjZlLTQxYzMtYjQwMS1mNDllMmIyOTc3OWU8L3htcE1NOkRvY3VtZW50SUQ+CiAgICAgICAgIDx4bXBNTTpJbnN0YW5jZUlEPnhtcC5paWQ6MmViYTk4MTYtMGQ0ZS00YWUwLThiNGEtNjNjN2ZkN2ViOWE3PC94bXBNTTpJbnN0YW5jZUlEPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KAAAAAqBsY21zBDAAAG1udHJSR0IgWFlaIAfmAAcAEAAJABAAAmFjc3BBUFBMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtbGNtcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWRlc2MAAAEgAAAAQGNwcnQAAAFgAAAANnd0cHQAAAGYAAAAFGNoYWQAAAGsAAAALHJYWVoAAAHYAAAAFGJYWVoAAAHsAAAAFGdYWVoAAAIAAAAAFHJUUkMAAAIUAAAAIGdUUkMAAAIUAAAAIGJUUkMAAAIUAAAAIGNocm0AAAI0AAAAJGRtbmQAAAJYAAAAJGRtZGQAAAJ8AAAAJG1sdWMAAAAAAAAAAQAAAAxlblVTAAAAJAAAABwARwBJAE0AUAAgAGIAdQBpAGwAdAAtAGkAbgAgAHMAUgBHAEJtbHVjAAAAAAAAAAEAAAAMZW5VUwAAABoAAAAcAFAAdQBiAGwAaQBjACAARABvAG0AYQBpAG4AAFhZWiAAAAAAAAD21gABAAAAANMtc2YzMgAAAAAAAQxCAAAF3v//8yUAAAeTAAD9kP//+6H///2iAAAD3AAAwG5YWVogAAAAAAAAb6AAADj1AAADkFhZWiAAAAAAAAAknwAAD4QAALbEWFlaIAAAAAAAAGKXAAC3hwAAGNlwYXJhAAAAAAADAAAAAmZmAADypwAADVkAABPQAAAKW2Nocm0AAAAAAAMAAAAAo9cAAFR8AABMzQAAmZoAACZnAAAPXG1sdWMAAAAAAAAAAQAAAAxlblVTAAAACAAAABwARwBJAE0AUG1sdWMAAAAAAAAAAQAAAAxlblVTAAAACAAAABwAcwBSAEcAQg==";
    let tiff_lzw_image_base64 = "TU0AKgAAASoAA6ABAAMAAAABAAEAAKACAAQAAAABAAAACKADAAQAAAABAAAACAAAAACABgAAB/ugAwI2gEGAAuAt/QMKuwAKQBvQAJN5v8ABh0RqBhh/loAOgAJoIQMFvCBysAPUABEAGUAO8AKeBSx/q0InUAFJ3kkAPcSOuCIg+AAFBNtgBXLUJgApox3QMDH1/pgEH0AGd5AUAPprwMBChrAACAAVyV+zAzoJ+AAChtnv99uUYABlnuLDRCAiBv2zs1+UcaAdC0hoh0AAwMMZ/vR0DmBm97AA7JADX8BgBFP04VRJAAHMgNQMBlt/gsKo8AAh0BUAO1fysgMAAU8ggB+u/SvM3zSVv8AgceAABvkugALSMAAFBH/Yzd+qMFAB+MN7gCAgAAAZAQAAAwAAAAEACAAAAQEAAwAAAAEACAAAAQIAAwAAAAQAAAJsAQMAAwAAAAEABQAAAQYAAwAAAAEAAgAAAQoAAwAAAAEAAQAAAQ4AAgAAABIAAAJ8AREABAAAAAEAAAAyARIAAwAAAAEAAQAAARUAAwAAAAEABAAAARYAAwAAAAEACAAAARcABAAAAAEAAAD3ARoABQAAAAEAAAJcARsABQAAAAEAAAJkARwAAwAAAAEAAQAAASgAAwAAAAEAAgAAATEAAgAAAA0AAAKOATIAAgAAABQAAAKcAT0AAwAAAAEAAgAAAVIAAwAAAAEAAQAAAVMAAwAAAAQAAAJ0ArwAAQAAB4EAAALWg7sABwAAACUAAAKwh2kABAAAAAEAAAAIh3MABwAAAqAAAApYAAAAAAAAASwAAAABAAABLAAAAAEACAAIAAgACAABAAEAAQABQ3JlYXRlZCB3aXRoIEdJTVAAR0lNUCAyLjEwLjMyAAAyMDIyOjA3OjE2IDEyOjI2OjEzABwBWgADGyVHHAIAAAIAAhwCeAARQ3JlYXRlZCB3aXRoIEdJTVAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNi4wLjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICAgICAgICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgICAgICAgICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICAgICAgICAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgICAgICAgICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyI+CiAgICAgICAgIDxHSU1QOkFQST4yLjA8L0dJTVA6QVBJPgogICAgICAgICA8R0lNUDpWZXJzaW9uPjIuMTAuMzI8L0dJTVA6VmVyc2lvbj4KICAgICAgICAgPEdJTVA6VGltZVN0YW1wPjE2NTc5NjM1NzM5MzM1NTI8L0dJTVA6VGltZVN0YW1wPgogICAgICAgICA8R0lNUDpQbGF0Zm9ybT5NYWMgT1M8L0dJTVA6UGxhdGZvcm0+CiAgICAgICAgIDxkYzpGb3JtYXQ+aW1hZ2UvanBlZzwvZGM6Rm9ybWF0PgogICAgICAgICA8ZGM6ZGVzY3JpcHRpb24+CiAgICAgICAgICAgIDxyZGY6QWx0PgogICAgICAgICAgICAgICA8cmRmOmxpIHhtbDpsYW5nPSJ4LWRlZmF1bHQiPkNyZWF0ZWQgd2l0aCBHSU1QPC9yZGY6bGk+CiAgICAgICAgICAgIDwvcmRmOkFsdD4KICAgICAgICAgPC9kYzpkZXNjcmlwdGlvbj4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5HSU1QIDIuMTAuMzI8L3htcDpDcmVhdG9yVG9vbD4KICAgICAgICAgPHhtcDpNb2RpZnlEYXRlPjIwMjItMDctMTZUMTI6MjY6MTM8L3htcDpNb2RpZnlEYXRlPgogICAgICAgICA8eG1wOk1ldGFkYXRhRGF0ZT4yMDIyOjA3OjE2VDEyOjI2OjEzKzAzOjAwPC94bXA6TWV0YWRhdGFEYXRlPgogICAgICAgICA8eG1wTU06T3JpZ2luYWxEb2N1bWVudElEPnhtcC5kaWQ6YjNiZmM0ZDEtNGQ1MS00ZDE1LTliODItODlkZDc5NDE5YjY0PC94bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ+CiAgICAgICAgIDx4bXBNTTpIaXN0b3J5PgogICAgICAgICAgICA8cmRmOlNlcT4KICAgICAgICAgICAgICAgPHJkZjpsaSByZGY6cGFyc2VUeXBlPSJSZXNvdXJjZSI+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDpjaGFuZ2VkPi88L3N0RXZ0OmNoYW5nZWQ+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDpzb2Z0d2FyZUFnZW50PkdpbXAgMi4xMCAoTWFjIE9TKTwvc3RFdnQ6c29mdHdhcmVBZ2VudD4KICAgICAgICAgICAgICAgICAgPHN0RXZ0OndoZW4+MjAyMi0wNy0xNlQxMjoyNjoxMyswMzowMDwvc3RFdnQ6d2hlbj4KICAgICAgICAgICAgICAgICAgPHN0RXZ0Omluc3RhbmNlSUQ+eG1wLmlpZDoxNDkyN2QzYS1hNGJjLTQzMzYtODU0MS1jMmZhNjk1MmMwNTg8L3N0RXZ0Omluc3RhbmNlSUQ+CiAgICAgICAgICAgICAgICAgIDxzdEV2dDphY3Rpb24+c2F2ZWQ8L3N0RXZ0OmFjdGlvbj4KICAgICAgICAgICAgICAgPC9yZGY6bGk+CiAgICAgICAgICAgIDwvcmRmOlNlcT4KICAgICAgICAgPC94bXBNTTpIaXN0b3J5PgogICAgICAgICA8eG1wTU06RG9jdW1lbnRJRD5naW1wOmRvY2lkOmdpbXA6OGMxMzNkZmYtMWY2ZS00MWMzLWI0MDEtZjQ5ZTJiMjk3NzllPC94bXBNTTpEb2N1bWVudElEPgogICAgICAgICA8eG1wTU06SW5zdGFuY2VJRD54bXAuaWlkOjJlYmE5ODE2LTBkNGUtNGFlMC04YjRhLTYzYzdmZDdlYjlhNzwveG1wTU06SW5zdGFuY2VJRD4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CgAAAAKgbGNtcwQwAABtbnRyUkdCIFhZWiAH5gAHABAACQAQAAJhY3NwQVBQTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLWxjbXMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1kZXNjAAABIAAAAEBjcHJ0AAABYAAAADZ3dHB0AAABmAAAABRjaGFkAAABrAAAACxyWFlaAAAB2AAAABRiWFlaAAAB7AAAABRnWFlaAAACAAAAABRyVFJDAAACFAAAACBnVFJDAAACFAAAACBiVFJDAAACFAAAACBjaHJtAAACNAAAACRkbW5kAAACWAAAACRkbWRkAAACfAAAACRtbHVjAAAAAAAAAAEAAAAMZW5VUwAAACQAAAAcAEcASQBNAFAAIABiAHUAaQBsAHQALQBpAG4AIABzAFIARwBCbWx1YwAAAAAAAAABAAAADGVuVVMAAAAaAAAAHABQAHUAYgBsAGkAYwAgAEQAbwBtAGEAaQBuAABYWVogAAAAAAAA9tYAAQAAAADTLXNmMzIAAAAAAAEMQgAABd7///MlAAAHkwAA/ZD///uh///9ogAAA9wAAMBuWFlaIAAAAAAAAG+gAAA49QAAA5BYWVogAAAAAAAAJJ8AAA+EAAC2xFhZWiAAAAAAAABilwAAt4cAABjZcGFyYQAAAAAAAwAAAAJmZgAA8qcAAA1ZAAAT0AAACltjaHJtAAAAAAADAAAAAKPXAABUfAAATM0AAJmaAAAmZwAAD1xtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAAgAAAAcAEcASQBNAFBtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAAgAAAAcAHMAUgBHAEI=";
    let image_array = base64::decode(tiff_image_base64).unwrap();
    let image_array_lzw = base64::decode(tiff_lzw_image_base64).unwrap();

    let (actual_source, actual_format) = get_source(image_array);
    let (actual_width, actual_height) = actual_source.dimensions();

    assert_eq!(8, actual_width);
    assert_eq!(8, actual_height);
    assert_eq!(ImageFormat::Tiff, actual_format);

    let (actual_source_lzw, actual_format_lzw) = get_source(image_array_lzw);
    let (actual_width_lzw, actual_height_lzw) = actual_source_lzw.dimensions();

    assert_eq!(8, actual_width_lzw);
    assert_eq!(8, actual_height_lzw);
    assert_eq!(ImageFormat::Tiff, actual_format_lzw);
}
